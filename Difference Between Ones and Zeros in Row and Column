class Solution:
    def onesMinusZeros(self, grid: List[List[int]]) -> List[List[int]]:
        row_length = len(grid[0])
        r_zeros_in_rows = [0] * len(grid)

        number_zeros_in_rows = [0] * len(grid)
        number_ones_in_rows = [0] * len(grid)
        number_ones_in_columns = [0] * row_length
        number_zeros_in_columns = [0] * row_length
        
        for row in range(len(grid)):
            for column in range(len(grid[row])):
                if grid[row][column] == 1:
                    number_ones_in_columns[column] += 1
                    number_ones_in_rows[row] += 1
                else:
                    number_zeros_in_columns[column] += 1
                    number_zeros_in_rows[row] += 1
                    
        
        ans = [[0] * row_length  for i in range(len(grid))]
        
        for row in range(len(grid)):
            for column in range(len(grid[row])):
                diff = (number_ones_in_rows[row] + number_ones_in_columns[column]) - (number_zeros_in_rows[row] + number_zeros_in_columns[column])
                ans[row][column] = diff
        return ans
                
                
                
                
                
                
                
